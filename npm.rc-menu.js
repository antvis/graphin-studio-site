(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{45:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXTERNAL MODULE: external {"commonjs":"react","commonjs2":"react","amd":"react","root":"React"}\nvar external_commonjs_react_commonjs2_react_amd_react_root_React_ = __webpack_require__(0);\n\n// EXTERNAL MODULE: ../graphin-components/node_modules/mini-store/lib/index.js\nvar lib = __webpack_require__(38);\n\n// EXTERNAL MODULE: ../graphin-components/node_modules/rc-util/es/KeyCode.js\nvar KeyCode = __webpack_require__(22);\n\n// EXTERNAL MODULE: ../graphin-components/node_modules/rc-util/es/createChainedFunction.js\nvar createChainedFunction = __webpack_require__(312);\n\n// EXTERNAL MODULE: ../graphin-components/node_modules/shallowequal/index.js\nvar shallowequal = __webpack_require__(180);\nvar shallowequal_default = /*#__PURE__*/__webpack_require__.n(shallowequal);\n\n// EXTERNAL MODULE: ../graphin-components/node_modules/classnames/index.js\nvar classnames = __webpack_require__(5);\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n\n// CONCATENATED MODULE: ../graphin-components/node_modules/rc-menu/es/utils/isMobile.js\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n// MIT License from https://github.com/kaimallea/isMobile\nvar applePhone = /iPhone/i;\nvar appleIpod = /iPod/i;\nvar appleTablet = /iPad/i;\nvar androidPhone = /\\bAndroid(?:.+)Mobile\\b/i; // Match \'Android\' AND \'Mobile\'\n\nvar androidTablet = /Android/i;\nvar amazonPhone = /\\bAndroid(?:.+)SD4930UR\\b/i;\nvar amazonTablet = /\\bAndroid(?:.+)(?:KF[A-Z]{2,4})\\b/i;\nvar windowsPhone = /Windows Phone/i;\nvar windowsTablet = /\\bWindows(?:.+)ARM\\b/i; // Match \'Windows\' AND \'ARM\'\n\nvar otherBlackberry = /BlackBerry/i;\nvar otherBlackberry10 = /BB10/i;\nvar otherOpera = /Opera Mini/i;\nvar otherChrome = /\\b(CriOS|Chrome)(?:.+)Mobile/i;\nvar otherFirefox = /Mobile(?:.+)Firefox\\b/i; // Match \'Mobile\' AND \'Firefox\'\n\nfunction match(regex, userAgent) {\n  return regex.test(userAgent);\n}\n\nfunction isMobile(userAgent) {\n  var ua = userAgent || (typeof navigator !== \'undefined\' ? navigator.userAgent : \'\'); // Facebook mobile app\'s integrated browser adds a bunch of strings that\n  // match everything. Strip it out if it exists.\n\n  var tmp = ua.split(\'[FBAN\');\n\n  if (typeof tmp[1] !== \'undefined\') {\n    var _tmp = tmp;\n\n    var _tmp2 = _slicedToArray(_tmp, 1);\n\n    ua = _tmp2[0];\n  } // Twitter mobile app\'s integrated browser on iPad adds a "Twitter for\n  // iPhone" string. Same probably happens on other tablet platforms.\n  // This will confuse detection so strip it out if it exists.\n\n\n  tmp = ua.split(\'Twitter\');\n\n  if (typeof tmp[1] !== \'undefined\') {\n    var _tmp3 = tmp;\n\n    var _tmp4 = _slicedToArray(_tmp3, 1);\n\n    ua = _tmp4[0];\n  }\n\n  var result = {\n    apple: {\n      phone: match(applePhone, ua) && !match(windowsPhone, ua),\n      ipod: match(appleIpod, ua),\n      tablet: !match(applePhone, ua) && match(appleTablet, ua) && !match(windowsPhone, ua),\n      device: (match(applePhone, ua) || match(appleIpod, ua) || match(appleTablet, ua)) && !match(windowsPhone, ua)\n    },\n    amazon: {\n      phone: match(amazonPhone, ua),\n      tablet: !match(amazonPhone, ua) && match(amazonTablet, ua),\n      device: match(amazonPhone, ua) || match(amazonTablet, ua)\n    },\n    android: {\n      phone: !match(windowsPhone, ua) && match(amazonPhone, ua) || !match(windowsPhone, ua) && match(androidPhone, ua),\n      tablet: !match(windowsPhone, ua) && !match(amazonPhone, ua) && !match(androidPhone, ua) && (match(amazonTablet, ua) || match(androidTablet, ua)),\n      device: !match(windowsPhone, ua) && (match(amazonPhone, ua) || match(amazonTablet, ua) || match(androidPhone, ua) || match(androidTablet, ua)) || match(/\\bokhttp\\b/i, ua)\n    },\n    windows: {\n      phone: match(windowsPhone, ua),\n      tablet: match(windowsTablet, ua),\n      device: match(windowsPhone, ua) || match(windowsTablet, ua)\n    },\n    other: {\n      blackberry: match(otherBlackberry, ua),\n      blackberry10: match(otherBlackberry10, ua),\n      opera: match(otherOpera, ua),\n      firefox: match(otherFirefox, ua),\n      chrome: match(otherChrome, ua),\n      device: match(otherBlackberry, ua) || match(otherBlackberry10, ua) || match(otherOpera, ua) || match(otherFirefox, ua) || match(otherChrome, ua)\n    },\n    // Additional\n    any: null,\n    phone: null,\n    tablet: null\n  };\n  result.any = result.apple.device || result.android.device || result.windows.device || result.other.device; // excludes \'other\' devices and ipods, targeting touchscreen phones\n\n  result.phone = result.apple.phone || result.android.phone || result.windows.phone;\n  result.tablet = result.apple.tablet || result.android.tablet || result.windows.tablet;\n  return result;\n}\n\nvar defaultResult = _objectSpread({}, isMobile(), {\n  isMobile: isMobile\n});\n\n/* harmony default export */ var utils_isMobile = (defaultResult);\n// CONCATENATED MODULE: ../graphin-components/node_modules/rc-menu/es/util.js\nfunction _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\n\n\nfunction noop() {}\nfunction getKeyFromChildrenIndex(child, menuEventKey, index) {\n  var prefix = menuEventKey || \'\';\n  return child.key || "".concat(prefix, "item_").concat(index);\n}\nfunction getMenuIdFromSubMenuEventKey(eventKey) {\n  return "".concat(eventKey, "-menu-");\n}\nfunction loopMenuItem(children, cb) {\n  var index = -1;\n  external_commonjs_react_commonjs2_react_amd_react_root_React_["Children"].forEach(children, function (c) {\n    index += 1;\n\n    if (c && c.type && c.type.isMenuItemGroup) {\n      external_commonjs_react_commonjs2_react_amd_react_root_React_["Children"].forEach(c.props.children, function (c2) {\n        index += 1;\n        cb(c2, index);\n      });\n    } else {\n      cb(c, index);\n    }\n  });\n}\nfunction loopMenuItemRecursively(children, keys, ret) {\n  /* istanbul ignore if */\n  if (!children || ret.find) {\n    return;\n  }\n\n  external_commonjs_react_commonjs2_react_amd_react_root_React_["Children"].forEach(children, function (c) {\n    if (c) {\n      var construct = c.type;\n\n      if (!construct || !(construct.isSubMenu || construct.isMenuItem || construct.isMenuItemGroup)) {\n        return;\n      }\n\n      if (keys.indexOf(c.key) !== -1) {\n        ret.find = true;\n      } else if (c.props.children) {\n        loopMenuItemRecursively(c.props.children, keys, ret);\n      }\n    }\n  });\n}\nvar menuAllProps = [\'defaultSelectedKeys\', \'selectedKeys\', \'defaultOpenKeys\', \'openKeys\', \'mode\', \'getPopupContainer\', \'onSelect\', \'onDeselect\', \'onDestroy\', \'openTransitionName\', \'openAnimation\', \'subMenuOpenDelay\', \'subMenuCloseDelay\', \'forceSubMenuRender\', \'triggerSubMenuAction\', \'level\', \'selectable\', \'multiple\', \'onOpenChange\', \'visible\', \'focusable\', \'defaultActiveFirst\', \'prefixCls\', \'inlineIndent\', \'parentMenu\', \'title\', \'rootPrefixCls\', \'eventKey\', \'active\', \'onItemHover\', \'onTitleMouseEnter\', \'onTitleMouseLeave\', \'onTitleClick\', \'popupAlign\', \'popupOffset\', \'isOpen\', \'renderMenuItem\', \'manualRef\', \'subMenuKey\', \'disabled\', \'index\', \'isSelected\', \'store\', \'activeKey\', \'builtinPlacements\', \'overflowedIndicator\', \'motion\', // the following keys found need to be removed from test regression\n\'attribute\', \'value\', \'popupClassName\', \'inlineCollapsed\', \'menu\', \'theme\', \'itemIcon\', \'expandIcon\']; // ref: https://github.com/ant-design/ant-design/issues/14007\n// ref: https://bugs.chromium.org/p/chromium/issues/detail?id=360889\n// getBoundingClientRect return the full precision value, which is\n// not the same behavior as on chrome. Set the precision to 6 to\n// unify their behavior\n\nvar getWidth = function getWidth(elem) {\n  var width = elem && typeof elem.getBoundingClientRect === \'function\' && elem.getBoundingClientRect().width;\n\n  if (width) {\n    width = +width.toFixed(6);\n  }\n\n  return width || 0;\n};\nvar setStyle = function setStyle(elem, styleProperty, value) {\n  if (elem && _typeof(elem.style) === \'object\') {\n    elem.style[styleProperty] = value;\n  }\n};\nvar util_isMobileDevice = function isMobileDevice() {\n  return utils_isMobile.any;\n};\n// EXTERNAL MODULE: external {"commonjs":"react-dom","commonjs2":"react-dom","amd":"react-dom","root":"ReactDOM"}\nvar external_commonjs_react_dom_commonjs2_react_dom_amd_react_dom_root_ReactDOM_ = __webpack_require__(4);\n\n// EXTERNAL MODULE: ../graphin-components/node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js\nvar ResizeObserver_es = __webpack_require__(313);\n\n// EXTERNAL MODULE: ../graphin-components/node_modules/rc-trigger/es/index.js + 4 modules\nvar es = __webpack_require__(124);\n\n// EXTERNAL MODULE: ../graphin-components/node_modules/rc-animate/es/CSSMotion.js + 1 modules\nvar CSSMotion = __webpack_require__(319);\n\n// CONCATENATED MODULE: ../graphin-components/node_modules/rc-menu/es/placements.js\nvar autoAdjustOverflow = {\n  adjustX: 1,\n  adjustY: 1\n};\nvar placements = {\n  topLeft: {\n    points: [\'bl\', \'tl\'],\n    overflow: autoAdjustOverflow,\n    offset: [0, -7]\n  },\n  bottomLeft: {\n    points: [\'tl\', \'bl\'],\n    overflow: autoAdjustOverflow,\n    offset: [0, 7]\n  },\n  leftTop: {\n    points: [\'tr\', \'tl\'],\n    overflow: autoAdjustOverflow,\n    offset: [-4, 0]\n  },\n  rightTop: {\n    points: [\'tl\', \'tr\'],\n    overflow: autoAdjustOverflow,\n    offset: [4, 0]\n  }\n};\n/* harmony default export */ var es_placements = (placements);\n// CONCATENATED MODULE: ../graphin-components/node_modules/rc-menu/es/SubMenu.js\nfunction SubMenu_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { SubMenu_typeof = function _typeof(obj) { return typeof obj; }; } else { SubMenu_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return SubMenu_typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (SubMenu_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction SubMenu_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction SubMenu_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { SubMenu_ownKeys(source, true).forEach(function (key) { SubMenu_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { SubMenu_ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction SubMenu_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n // import Animate from \'rc-animate\';\n\n\n\n\n\n\n\nvar guid = 0;\nvar popupPlacementMap = {\n  horizontal: \'bottomLeft\',\n  vertical: \'rightTop\',\n  \'vertical-left\': \'rightTop\',\n  \'vertical-right\': \'leftTop\'\n};\n\nvar SubMenu_updateDefaultActiveFirst = function updateDefaultActiveFirst(store, eventKey, defaultActiveFirst) {\n  var menuId = getMenuIdFromSubMenuEventKey(eventKey);\n  var state = store.getState();\n  store.setState({\n    defaultActiveFirst: SubMenu_objectSpread({}, state.defaultActiveFirst, SubMenu_defineProperty({}, menuId, defaultActiveFirst))\n  });\n};\n\nvar SubMenu_SubMenu =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SubMenu, _React$Component);\n\n  function SubMenu(props) {\n    var _this;\n\n    _classCallCheck(this, SubMenu);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SubMenu).call(this, props));\n\n    _this.onDestroy = function (key) {\n      _this.props.onDestroy(key);\n    };\n    /**\n     * note:\n     *  This legacy code that `onKeyDown` is called by parent instead of dom self.\n     *  which need return code to check if this event is handled\n     */\n\n\n    _this.onKeyDown = function (e) {\n      var keyCode = e.keyCode;\n      var menu = _this.menuInstance;\n      var _this$props = _this.props,\n          isOpen = _this$props.isOpen,\n          store = _this$props.store;\n\n      if (keyCode === KeyCode["a" /* default */].ENTER) {\n        _this.onTitleClick(e);\n\n        SubMenu_updateDefaultActiveFirst(store, _this.props.eventKey, true);\n        return true;\n      }\n\n      if (keyCode === KeyCode["a" /* default */].RIGHT) {\n        if (isOpen) {\n          menu.onKeyDown(e);\n        } else {\n          _this.triggerOpenChange(true); // need to update current menu\'s defaultActiveFirst value\n\n\n          SubMenu_updateDefaultActiveFirst(store, _this.props.eventKey, true);\n        }\n\n        return true;\n      }\n\n      if (keyCode === KeyCode["a" /* default */].LEFT) {\n        var handled;\n\n        if (isOpen) {\n          handled = menu.onKeyDown(e);\n        } else {\n          return undefined;\n        }\n\n        if (!handled) {\n          _this.triggerOpenChange(false);\n\n          handled = true;\n        }\n\n        return handled;\n      }\n\n      if (isOpen && (keyCode === KeyCode["a" /* default */].UP || keyCode === KeyCode["a" /* default */].DOWN)) {\n        return menu.onKeyDown(e);\n      }\n\n      return undefined;\n    };\n\n    _this.onOpenChange = function (e) {\n      _this.props.onOpenChange(e);\n    };\n\n    _this.onPopupVisibleChange = function (visible) {\n      _this.triggerOpenChange(visible, visible ? \'mouseenter\' : \'mouseleave\');\n    };\n\n    _this.onMouseEnter = function (e) {\n      var _this$props2 = _this.props,\n          key = _this$props2.eventKey,\n          onMouseEnter = _this$props2.onMouseEnter,\n          store = _this$props2.store;\n      SubMenu_updateDefaultActiveFirst(store, _this.props.eventKey, false);\n      onMouseEnter({\n        key: key,\n        domEvent: e\n      });\n    };\n\n    _this.onMouseLeave = function (e) {\n      var _this$props3 = _this.props,\n          parentMenu = _this$props3.parentMenu,\n          eventKey = _this$props3.eventKey,\n          onMouseLeave = _this$props3.onMouseLeave;\n      parentMenu.subMenuInstance = _assertThisInitialized(_this);\n      onMouseLeave({\n        key: eventKey,\n        domEvent: e\n      });\n    };\n\n    _this.onTitleMouseEnter = function (domEvent) {\n      var _this$props4 = _this.props,\n          key = _this$props4.eventKey,\n          onItemHover = _this$props4.onItemHover,\n          onTitleMouseEnter = _this$props4.onTitleMouseEnter;\n      onItemHover({\n        key: key,\n        hover: true\n      });\n      onTitleMouseEnter({\n        key: key,\n        domEvent: domEvent\n      });\n    };\n\n    _this.onTitleMouseLeave = function (e) {\n      var _this$props5 = _this.props,\n          parentMenu = _this$props5.parentMenu,\n          eventKey = _this$props5.eventKey,\n          onItemHover = _this$props5.onItemHover,\n          onTitleMouseLeave = _this$props5.onTitleMouseLeave;\n      parentMenu.subMenuInstance = _assertThisInitialized(_this);\n      onItemHover({\n        key: eventKey,\n        hover: false\n      });\n      onTitleMouseLeave({\n        key: eventKey,\n        domEvent: e\n      });\n    };\n\n    _this.onTitleClick = function (e) {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          props = _assertThisInitialize.props;\n\n      props.onTitleClick({\n        key: props.eventKey,\n        domEvent: e\n      });\n\n      if (props.triggerSubMenuAction === \'hover\') {\n        return;\n      }\n\n      _this.triggerOpenChange(!props.isOpen, \'click\');\n\n      SubMenu_updateDefaultActiveFirst(props.store, _this.props.eventKey, false);\n    };\n\n    _this.onSubMenuClick = function (info) {\n      // in the case of overflowed submenu\n      // onClick is not copied over\n      if (typeof _this.props.onClick === \'function\') {\n        _this.props.onClick(_this.addKeyPath(info));\n      }\n    };\n\n    _this.onSelect = function (info) {\n      _this.props.onSelect(info);\n    };\n\n    _this.onDeselect = function (info) {\n      _this.props.onDeselect(info);\n    };\n\n    _this.getPrefixCls = function () {\n      return "".concat(_this.props.rootPrefixCls, "-submenu");\n    };\n\n    _this.getActiveClassName = function () {\n      return "".concat(_this.getPrefixCls(), "-active");\n    };\n\n    _this.getDisabledClassName = function () {\n      return "".concat(_this.getPrefixCls(), "-disabled");\n    };\n\n    _this.getSelectedClassName = function () {\n      return "".concat(_this.getPrefixCls(), "-selected");\n    };\n\n    _this.getOpenClassName = function () {\n      return "".concat(_this.props.rootPrefixCls, "-submenu-open");\n    };\n\n    _this.saveMenuInstance = function (c) {\n      // children menu instance\n      _this.menuInstance = c;\n    };\n\n    _this.addKeyPath = function (info) {\n      return SubMenu_objectSpread({}, info, {\n        keyPath: (info.keyPath || []).concat(_this.props.eventKey)\n      });\n    };\n\n    _this.triggerOpenChange = function (open, type) {\n      var key = _this.props.eventKey;\n\n      var openChange = function openChange() {\n        _this.onOpenChange({\n          key: key,\n          item: _assertThisInitialized(_this),\n          trigger: type,\n          open: open\n        });\n      };\n\n      if (type === \'mouseenter\') {\n        // make sure mouseenter happen after other menu item\'s mouseleave\n        _this.mouseenterTimeout = setTimeout(function () {\n          openChange();\n        }, 0);\n      } else {\n        openChange();\n      }\n    };\n\n    _this.isChildrenSelected = function () {\n      var ret = {\n        find: false\n      };\n      loopMenuItemRecursively(_this.props.children, _this.props.selectedKeys, ret);\n      return ret.find;\n    };\n\n    _this.isOpen = function () {\n      return _this.props.openKeys.indexOf(_this.props.eventKey) !== -1;\n    };\n\n    _this.adjustWidth = function () {\n      /* istanbul ignore if */\n      if (!_this.subMenuTitle || !_this.menuInstance) {\n        return;\n      }\n\n      var popupMenu = external_commonjs_react_dom_commonjs2_react_dom_amd_react_dom_root_ReactDOM_["findDOMNode"](_this.menuInstance);\n\n      if (popupMenu.offsetWidth >= _this.subMenuTitle.offsetWidth) {\n        return;\n      }\n      /* istanbul ignore next */\n\n\n      popupMenu.style.minWidth = "".concat(_this.subMenuTitle.offsetWidth, "px");\n    };\n\n    _this.saveSubMenuTitle = function (subMenuTitle) {\n      _this.subMenuTitle = subMenuTitle;\n    };\n\n    var store = props.store,\n        eventKey = props.eventKey;\n\n    var _store$getState = store.getState(),\n        defaultActiveFirst = _store$getState.defaultActiveFirst;\n\n    _this.isRootMenu = false;\n    var value = false;\n\n    if (defaultActiveFirst) {\n      value = defaultActiveFirst[eventKey];\n    }\n\n    SubMenu_updateDefaultActiveFirst(store, eventKey, value);\n    return _this;\n  }\n\n  _createClass(SubMenu, [{\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      this.componentDidUpdate();\n    }\n  }, {\n    key: "componentDidUpdate",\n    value: function componentDidUpdate() {\n      var _this2 = this;\n\n      var _this$props6 = this.props,\n          mode = _this$props6.mode,\n          parentMenu = _this$props6.parentMenu,\n          manualRef = _this$props6.manualRef; // invoke customized ref to expose component to mixin\n\n      if (manualRef) {\n        manualRef(this);\n      }\n\n      if (mode !== \'horizontal\' || !parentMenu.isRootMenu || !this.props.isOpen) {\n        return;\n      }\n\n      this.minWidthTimeout = setTimeout(function () {\n        return _this2.adjustWidth();\n      }, 0);\n    }\n  }, {\n    key: "componentWillUnmount",\n    value: function componentWillUnmount() {\n      var _this$props7 = this.props,\n          onDestroy = _this$props7.onDestroy,\n          eventKey = _this$props7.eventKey;\n\n      if (onDestroy) {\n        onDestroy(eventKey);\n      }\n      /* istanbul ignore if */\n\n\n      if (this.minWidthTimeout) {\n        clearTimeout(this.minWidthTimeout);\n      }\n      /* istanbul ignore if */\n\n\n      if (this.mouseenterTimeout) {\n        clearTimeout(this.mouseenterTimeout);\n      }\n    }\n  }, {\n    key: "renderChildren",\n    value: function renderChildren(children) {\n      var _this3 = this;\n\n      var props = this.props;\n      var baseProps = {\n        mode: props.mode === \'horizontal\' ? \'vertical\' : props.mode,\n        visible: this.props.isOpen,\n        level: props.level + 1,\n        inlineIndent: props.inlineIndent,\n        focusable: false,\n        onClick: this.onSubMenuClick,\n        onSelect: this.onSelect,\n        onDeselect: this.onDeselect,\n        onDestroy: this.onDestroy,\n        selectedKeys: props.selectedKeys,\n        eventKey: "".concat(props.eventKey, "-menu-"),\n        openKeys: props.openKeys,\n        motion: props.motion,\n        onOpenChange: this.onOpenChange,\n        subMenuOpenDelay: props.subMenuOpenDelay,\n        parentMenu: this,\n        subMenuCloseDelay: props.subMenuCloseDelay,\n        forceSubMenuRender: props.forceSubMenuRender,\n        triggerSubMenuAction: props.triggerSubMenuAction,\n        builtinPlacements: props.builtinPlacements,\n        defaultActiveFirst: props.store.getState().defaultActiveFirst[getMenuIdFromSubMenuEventKey(props.eventKey)],\n        multiple: props.multiple,\n        prefixCls: props.rootPrefixCls,\n        id: this.internalMenuId,\n        manualRef: this.saveMenuInstance,\n        itemIcon: props.itemIcon,\n        expandIcon: props.expandIcon\n      };\n      var haveRendered = this.haveRendered;\n      this.haveRendered = true;\n      this.haveOpened = this.haveOpened || baseProps.visible || baseProps.forceSubMenuRender; // never rendered not planning to, don\'t render\n\n      if (!this.haveOpened) {\n        return external_commonjs_react_commonjs2_react_amd_react_root_React_["createElement"]("div", null);\n      } // ================== Motion ==================\n      // don\'t show transition on first rendering (no animation for opened menu)\n      // show appear transition if it\'s not visible (not sure why)\n      // show appear transition if it\'s not inline mode\n\n\n      var mergedMotion = SubMenu_objectSpread({}, props.motion, {\n        leavedClassName: "".concat(props.rootPrefixCls, "-hidden"),\n        removeOnLeave: false,\n        motionAppear: haveRendered || !baseProps.visible || baseProps.mode !== \'inline\'\n      });\n\n      return external_commonjs_react_commonjs2_react_amd_react_root_React_["createElement"](CSSMotion["a" /* default */], Object.assign({\n        visible: baseProps.visible\n      }, mergedMotion), function (_ref) {\n        var className = _ref.className,\n            style = _ref.style;\n        var mergedClassName = classnames_default()("".concat(baseProps.prefixCls, "-sub"), className);\n        return external_commonjs_react_commonjs2_react_amd_react_root_React_["createElement"](es_SubPopupMenu, Object.assign({}, baseProps, {\n          id: _this3.internalMenuId,\n          className: mergedClassName,\n          style: style\n        }), children);\n      });\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _classNames;\n\n      var props = SubMenu_objectSpread({}, this.props);\n\n      var isOpen = props.isOpen;\n      var prefixCls = this.getPrefixCls();\n      var isInlineMode = props.mode === \'inline\';\n      var className = classnames_default()(prefixCls, "".concat(prefixCls, "-").concat(props.mode), (_classNames = {}, SubMenu_defineProperty(_classNames, props.className, !!props.className), SubMenu_defineProperty(_classNames, this.getOpenClassName(), isOpen), SubMenu_defineProperty(_classNames, this.getActiveClassName(), props.active || isOpen && !isInlineMode), SubMenu_defineProperty(_classNames, this.getDisabledClassName(), props.disabled), SubMenu_defineProperty(_classNames, this.getSelectedClassName(), this.isChildrenSelected()), _classNames));\n\n      if (!this.internalMenuId) {\n        if (props.eventKey) {\n          this.internalMenuId = "".concat(props.eventKey, "$Menu");\n        } else {\n          guid += 1;\n          this.internalMenuId = "$__$".concat(guid, "$Menu");\n        }\n      }\n\n      var mouseEvents = {};\n      var titleClickEvents = {};\n      var titleMouseEvents = {};\n\n      if (!props.disabled) {\n        mouseEvents = {\n          onMouseLeave: this.onMouseLeave,\n          onMouseEnter: this.onMouseEnter\n        }; // only works in title, not outer li\n\n        titleClickEvents = {\n          onClick: this.onTitleClick\n        };\n        titleMouseEvents = {\n          onMouseEnter: this.onTitleMouseEnter,\n          onMouseLeave: this.onTitleMouseLeave\n        };\n      }\n\n      var style = {};\n\n      if (isInlineMode) {\n        style.paddingLeft = props.inlineIndent * props.level;\n      }\n\n      var ariaOwns = {}; // only set aria-owns when menu is open\n      // otherwise it would be an invalid aria-owns value\n      // since corresponding node cannot be found\n\n      if (this.props.isOpen) {\n        ariaOwns = {\n          \'aria-owns\': this.internalMenuId\n        };\n      } // expand custom icon should NOT be displayed in menu with horizontal mode.\n\n\n      var icon = null;\n\n      if (props.mode !== \'horizontal\') {\n        icon = this.props.expandIcon; // ReactNode\n\n        if (typeof this.props.expandIcon === \'function\') {\n          icon = external_commonjs_react_commonjs2_react_amd_react_root_React_["createElement"](this.props.expandIcon, SubMenu_objectSpread({}, this.props));\n        }\n      }\n\n      var title = external_commonjs_react_commonjs2_react_amd_react_root_React_["createElement"]("div", Object.assign({\n        ref: this.saveSubMenuTitle,\n        style: style,\n        className: "".concat(prefixCls, "-title")\n      }, titleMouseEvents, titleClickEvents, {\n        "aria-expanded": isOpen\n      }, ariaOwns, {\n        "aria-haspopup": "true",\n        title: typeof props.title === \'string\' ? props.title : undefined\n      }), props.title, icon || external_commonjs_react_commonjs2_react_amd_react_root_React_["createElement"]("i", {\n        className: "".concat(prefixCls, "-arrow")\n      }));\n      var children = this.renderChildren(props.children);\n      var getPopupContainer = props.parentMenu.isRootMenu ? props.parentMenu.props.getPopupContainer : function (triggerNode) {\n        return triggerNode.parentNode;\n      };\n      var popupPlacement = popupPlacementMap[props.mode];\n      var popupAlign = props.popupOffset ? {\n        offset: props.popupOffset\n      } : {};\n      var popupClassName = props.mode === \'inline\' ? \'\' : props.popupClassName;\n      var disabled = props.disabled,\n          triggerSubMenuAction = props.triggerSubMenuAction,\n          subMenuOpenDelay = props.subMenuOpenDelay,\n          forceSubMenuRender = props.forceSubMenuRender,\n          subMenuCloseDelay = props.subMenuCloseDelay,\n          builtinPlacements = props.builtinPlacements;\n      menuAllProps.forEach(function (key) {\n        return delete props[key];\n      }); // Set onClick to null, to ignore propagated onClick event\n\n      delete props.onClick;\n      return external_commonjs_react_commonjs2_react_amd_react_root_React_["createElement"]("li", Object.assign({}, props, mouseEvents, {\n        className: className,\n        role: "menuitem"\n      }), isInlineMode && title, isInlineMode && children, !isInlineMode && external_commonjs_react_commonjs2_react_amd_react_root_React_["createElement"](es["a" /* default */], {\n        prefixCls: prefixCls,\n        popupClassName: "".concat(prefixCls, "-popup ").concat(popupClassName),\n        getPopupContainer: getPopupContainer,\n        builtinPlacements: Object.assign({}, es_placements, builtinPlacements),\n        popupPlacement: popupPlacement,\n        popupVisible: isOpen,\n        popupAlign: popupAlign,\n        popup: children,\n        action: disabled ? [] : [triggerSubMenuAction],\n        mouseEnterDelay: subMenuOpenDelay,\n        mouseLeaveDelay: subMenuCloseDelay,\n        onPopupVisibleChange: this.onPopupVisibleChange,\n        forceRender: forceSubMenuRender\n      }, title));\n    }\n  }]);\n\n  return SubMenu;\n}(external_commonjs_react_commonjs2_react_amd_react_root_React_["Component"]);\nSubMenu_SubMenu.defaultProps = {\n  onMouseEnter: noop,\n  onMouseLeave: noop,\n  onTitleMouseEnter: noop,\n  onTitleMouseLeave: noop,\n  onTitleClick: noop,\n  manualRef: noop,\n  mode: \'vertical\',\n  title: \'\'\n};\nvar connected = Object(lib["connect"])(function (_ref2, _ref3) {\n  var openKeys = _ref2.openKeys,\n      activeKey = _ref2.activeKey,\n      selectedKeys = _ref2.selectedKeys;\n  var eventKey = _ref3.eventKey,\n      subMenuKey = _ref3.subMenuKey;\n  return {\n    isOpen: openKeys.indexOf(eventKey) > -1,\n    active: activeKey[subMenuKey] === eventKey,\n    selectedKeys: selectedKeys\n  };\n})(SubMenu_SubMenu);\nconnected.isSubMenu = true;\n/* harmony default export */ var es_SubMenu = (connected);\n// CONCATENATED MODULE: ../graphin-components/node_modules/rc-menu/es/DOMWrap.js\nfunction DOMWrap_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { DOMWrap_typeof = function _typeof(obj) { return typeof obj; }; } else { DOMWrap_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return DOMWrap_typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction DOMWrap_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction DOMWrap_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { DOMWrap_ownKeys(source, true).forEach(function (key) { DOMWrap_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { DOMWrap_ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction DOMWrap_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction DOMWrap_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction DOMWrap_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction DOMWrap_createClass(Constructor, protoProps, staticProps) { if (protoProps) DOMWrap_defineProperties(Constructor.prototype, protoProps); if (staticProps) DOMWrap_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction DOMWrap_possibleConstructorReturn(self, call) { if (call && (DOMWrap_typeof(call) === "object" || typeof call === "function")) { return call; } return DOMWrap_assertThisInitialized(self); }\n\nfunction DOMWrap_getPrototypeOf(o) { DOMWrap_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return DOMWrap_getPrototypeOf(o); }\n\nfunction DOMWrap_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction DOMWrap_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) DOMWrap_setPrototypeOf(subClass, superClass); }\n\nfunction DOMWrap_setPrototypeOf(o, p) { DOMWrap_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return DOMWrap_setPrototypeOf(o, p); }\n\n\n\n\n\n\nvar canUseDOM = !!(typeof window !== \'undefined\' && window.document && window.document.createElement);\nvar MENUITEM_OVERFLOWED_CLASSNAME = \'menuitem-overflowed\';\nvar FLOAT_PRECISION_ADJUST = 0.5; // Fix ssr\n\nif (canUseDOM) {\n  // eslint-disable-next-line global-require\n  __webpack_require__(821);\n}\n\nvar DOMWrap_DOMWrap =\n/*#__PURE__*/\nfunction (_React$Component) {\n  DOMWrap_inherits(DOMWrap, _React$Component);\n\n  function DOMWrap() {\n    var _this;\n\n    DOMWrap_classCallCheck(this, DOMWrap);\n\n    _this = DOMWrap_possibleConstructorReturn(this, DOMWrap_getPrototypeOf(DOMWrap).apply(this, arguments));\n    _this.resizeObserver = null;\n    _this.mutationObserver = null; // original scroll size of the list\n\n    _this.originalTotalWidth = 0; // copy of overflowed items\n\n    _this.overflowedItems = []; // cache item of the original items (so we can track the size and order)\n\n    _this.menuItemSizes = [];\n    _this.state = {\n      lastVisibleIndex: undefined\n    }; // get all valid menuItem nodes\n\n    _this.getMenuItemNodes = function () {\n      var prefixCls = _this.props.prefixCls;\n      var ul = external_commonjs_react_dom_commonjs2_react_dom_amd_react_dom_root_ReactDOM_["findDOMNode"](DOMWrap_assertThisInitialized(_this));\n\n      if (!ul) {\n        return [];\n      } // filter out all overflowed indicator placeholder\n\n\n      return [].slice.call(ul.children).filter(function (node) {\n        return node.className.split(\' \').indexOf("".concat(prefixCls, "-overflowed-submenu")) < 0;\n      });\n    };\n\n    _this.getOverflowedSubMenuItem = function (keyPrefix, overflowedItems, renderPlaceholder) {\n      var _this$props = _this.props,\n          overflowedIndicator = _this$props.overflowedIndicator,\n          level = _this$props.level,\n          mode = _this$props.mode,\n          prefixCls = _this$props.prefixCls,\n          theme = _this$props.theme;\n\n      if (level !== 1 || mode !== \'horizontal\') {\n        return null;\n      } // put all the overflowed item inside a submenu\n      // with a title of overflow indicator (\'...\')\n\n\n      var copy = _this.props.children[0];\n\n      var _copy$props = copy.props,\n          throwAway = _copy$props.children,\n          title = _copy$props.title,\n          propStyle = _copy$props.style,\n          rest = _objectWithoutProperties(_copy$props, ["children", "title", "style"]);\n\n      var style = DOMWrap_objectSpread({}, propStyle);\n\n      var key = "".concat(keyPrefix, "-overflowed-indicator");\n      var eventKey = "".concat(keyPrefix, "-overflowed-indicator");\n\n      if (overflowedItems.length === 0 && renderPlaceholder !== true) {\n        style = DOMWrap_objectSpread({}, style, {\n          display: \'none\'\n        });\n      } else if (renderPlaceholder) {\n        style = DOMWrap_objectSpread({}, style, {\n          visibility: \'hidden\',\n          // prevent from taking normal dom space\n          position: \'absolute\'\n        });\n        key = "".concat(key, "-placeholder");\n        eventKey = "".concat(eventKey, "-placeholder");\n      }\n\n      var popupClassName = theme ? "".concat(prefixCls, "-").concat(theme) : \'\';\n      var props = {};\n      menuAllProps.forEach(function (k) {\n        if (rest[k] !== undefined) {\n          props[k] = rest[k];\n        }\n      });\n      return external_commonjs_react_commonjs2_react_amd_react_root_React_["createElement"](es_SubMenu, Object.assign({\n        title: overflowedIndicator,\n        className: "".concat(prefixCls, "-overflowed-submenu"),\n        popupClassName: popupClassName\n      }, props, {\n        key: key,\n        eventKey: eventKey,\n        disabled: false,\n        style: style\n      }), overflowedItems);\n    }; // memorize rendered menuSize\n\n\n    _this.setChildrenWidthAndResize = function () {\n      if (_this.props.mode !== \'horizontal\') {\n        return;\n      }\n\n      var ul = external_commonjs_react_dom_commonjs2_react_dom_amd_react_dom_root_ReactDOM_["findDOMNode"](DOMWrap_assertThisInitialized(_this));\n\n      if (!ul) {\n        return;\n      }\n\n      var ulChildrenNodes = ul.children;\n\n      if (!ulChildrenNodes || ulChildrenNodes.length === 0) {\n        return;\n      }\n\n      var lastOverflowedIndicatorPlaceholder = ul.children[ulChildrenNodes.length - 1]; // need last overflowed indicator for calculating length;\n\n      setStyle(lastOverflowedIndicatorPlaceholder, \'display\', \'inline-block\');\n\n      var menuItemNodes = _this.getMenuItemNodes(); // reset display attribute for all hidden elements caused by overflow to calculate updated width\n      // and then reset to original state after width calculation\n\n\n      var overflowedItems = menuItemNodes.filter(function (c) {\n        return c.className.split(\' \').indexOf(MENUITEM_OVERFLOWED_CLASSNAME) >= 0;\n      });\n      overflowedItems.forEach(function (c) {\n        setStyle(c, \'display\', \'inline-block\');\n      });\n      _this.menuItemSizes = menuItemNodes.map(function (c) {\n        return getWidth(c);\n      });\n      overflowedItems.forEach(function (c) {\n        setStyle(c, \'display\', \'none\');\n      });\n      _this.overflowedIndicatorWidth = getWidth(ul.children[ul.children.length - 1]);\n      _this.originalTotalWidth = _this.menuItemSizes.reduce(function (acc, cur) {\n        return acc + cur;\n      }, 0);\n\n      _this.handleResize(); // prevent the overflowed indicator from taking space;\n\n\n      setStyle(lastOverflowedIndicatorPlaceholder, \'display\', \'none\');\n    };\n\n    _this.handleResize = function () {\n      if (_this.props.mode !== \'horizontal\') {\n        return;\n      }\n\n      var ul = external_commonjs_react_dom_commonjs2_react_dom_amd_react_dom_root_ReactDOM_["findDOMNode"](DOMWrap_assertThisInitialized(_this));\n\n      if (!ul) {\n        return;\n      }\n\n      var width = getWidth(ul);\n      _this.overflowedItems = [];\n      var currentSumWidth = 0; // index for last visible child in horizontal mode\n\n      var lastVisibleIndex; // float number comparison could be problematic\n      // e.g. 0.1 + 0.2 > 0.3 =====> true\n      // thus using FLOAT_PRECISION_ADJUST as buffer to help the situation\n\n      if (_this.originalTotalWidth > width + FLOAT_PRECISION_ADJUST) {\n        lastVisibleIndex = -1;\n\n        _this.menuItemSizes.forEach(function (liWidth) {\n          currentSumWidth += liWidth;\n\n          if (currentSumWidth + _this.overflowedIndicatorWidth <= width) {\n            lastVisibleIndex += 1;\n          }\n        });\n      }\n\n      _this.setState({\n        lastVisibleIndex: lastVisibleIndex\n      });\n    };\n\n    return _this;\n  }\n\n  DOMWrap_createClass(DOMWrap, [{\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setChildrenWidthAndResize();\n\n      if (this.props.level === 1 && this.props.mode === \'horizontal\') {\n        var menuUl = external_commonjs_react_dom_commonjs2_react_dom_amd_react_dom_root_ReactDOM_["findDOMNode"](this);\n\n        if (!menuUl) {\n          return;\n        }\n\n        this.resizeObserver = new ResizeObserver_es["a" /* default */](function (entries) {\n          entries.forEach(_this2.setChildrenWidthAndResize);\n        });\n        [].slice.call(menuUl.children).concat(menuUl).forEach(function (el) {\n          _this2.resizeObserver.observe(el);\n        });\n\n        if (typeof MutationObserver !== \'undefined\') {\n          this.mutationObserver = new MutationObserver(function () {\n            _this2.resizeObserver.disconnect();\n\n            [].slice.call(menuUl.children).concat(menuUl).forEach(function (el) {\n              _this2.resizeObserver.observe(el);\n            });\n\n            _this2.setChildrenWidthAndResize();\n          });\n          this.mutationObserver.observe(menuUl, {\n            attributes: false,\n            childList: true,\n            subTree: false\n          });\n        }\n      }\n    }\n  }, {\n    key: "componentWillUnmount",\n    value: function componentWillUnmount() {\n      if (this.resizeObserver) {\n        this.resizeObserver.disconnect();\n      }\n\n      if (this.mutationObserver) {\n        this.resizeObserver.disconnect();\n      }\n    }\n  }, {\n    key: "renderChildren",\n    value: function renderChildren(children) {\n      var _this3 = this;\n\n      // need to take care of overflowed items in horizontal mode\n      var lastVisibleIndex = this.state.lastVisibleIndex;\n      return (children || []).reduce(function (acc, childNode, index) {\n        var item = childNode;\n\n        if (_this3.props.mode === \'horizontal\') {\n          var overflowed = _this3.getOverflowedSubMenuItem(childNode.props.eventKey, []);\n\n          if (lastVisibleIndex !== undefined && _this3.props.className.indexOf("".concat(_this3.props.prefixCls, "-root")) !== -1) {\n            if (index > lastVisibleIndex) {\n              item = external_commonjs_react_commonjs2_react_amd_react_root_React_["cloneElement"](childNode, // 这里修改 eventKey 是为了防止隐藏状态下还会触发 openkeys 事件\n              {\n                style: {\n                  display: \'none\'\n                },\n                eventKey: "".concat(childNode.props.eventKey, "-hidden"),\n\n                /**\n                 * Legacy code. Here `className` never used:\n                 * https://github.com/react-component/menu/commit/4cd6b49fce9d116726f4ea00dda85325d6f26500#diff-e2fa48f75c2dd2318295cde428556a76R240\n                 */\n                className: "".concat(MENUITEM_OVERFLOWED_CLASSNAME)\n              });\n            }\n\n            if (index === lastVisibleIndex + 1) {\n              _this3.overflowedItems = children.slice(lastVisibleIndex + 1).map(function (c) {\n                return external_commonjs_react_commonjs2_react_amd_react_root_React_["cloneElement"](c, // children[index].key will become \'.$key\' in clone by default,\n                // we have to overwrite with the correct key explicitly\n                {\n                  key: c.props.eventKey,\n                  mode: \'vertical-left\'\n                });\n              });\n              overflowed = _this3.getOverflowedSubMenuItem(childNode.props.eventKey, _this3.overflowedItems);\n            }\n          }\n\n          var ret = [].concat(_toConsumableArray(acc), [overflowed, item]);\n\n          if (index === children.length - 1) {\n            // need a placeholder for calculating overflowed indicator width\n            ret.push(_this3.getOverflowedSubMenuItem(childNode.props.eventKey, [], true));\n          }\n\n          return ret;\n        }\n\n        return [].concat(_toConsumableArray(acc), [item]);\n      }, []);\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this$props2 = this.props,\n          visible = _this$props2.visible,\n          prefixCls = _this$props2.prefixCls,\n          overflowedIndicator = _this$props2.overflowedIndicator,\n          mode = _this$props2.mode,\n          level = _this$props2.level,\n          tag = _this$props2.tag,\n          children = _this$props2.children,\n          theme = _this$props2.theme,\n          rest = _objectWithoutProperties(_this$props2, ["visible", "prefixCls", "overflowedIndicator", "mode", "level", "tag", "children", "theme"]);\n\n      var Tag = tag;\n      return external_commonjs_react_commonjs2_react_amd_react_root_React_["createElement"](Tag, Object.assign({}, rest), this.renderChildren(children));\n    }\n  }]);\n\n  return DOMWrap;\n}(external_commonjs_react_commonjs2_react_amd_react_root_React_["Component"]);\n\nDOMWrap_DOMWrap.defaultProps = {\n  tag: \'div\',\n  className: \'\'\n};\n/* harmony default export */ var es_DOMWrap = (DOMWrap_DOMWrap);\n// CONCATENATED MODULE: ../graphin-components/node_modules/rc-menu/es/SubPopupMenu.js\nfunction SubPopupMenu_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { SubPopupMenu_typeof = function _typeof(obj) { return typeof obj; }; } else { SubPopupMenu_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return SubPopupMenu_typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction SubPopupMenu_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction SubPopupMenu_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction SubPopupMenu_createClass(Constructor, protoProps, staticProps) { if (protoProps) SubPopupMenu_defineProperties(Constructor.prototype, protoProps); if (staticProps) SubPopupMenu_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction SubPopupMenu_possibleConstructorReturn(self, call) { if (call && (SubPopupMenu_typeof(call) === "object" || typeof call === "function")) { return call; } return SubPopupMenu_assertThisInitialized(self); }\n\nfunction SubPopupMenu_getPrototypeOf(o) { SubPopupMenu_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return SubPopupMenu_getPrototypeOf(o); }\n\nfunction SubPopupMenu_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction SubPopupMenu_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) SubPopupMenu_setPrototypeOf(subClass, superClass); }\n\nfunction SubPopupMenu_setPrototypeOf(o, p) { SubPopupMenu_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return SubPopupMenu_setPrototypeOf(o, p); }\n\nfunction SubPopupMenu_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction SubPopupMenu_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { SubPopupMenu_ownKeys(source, true).forEach(function (key) { SubPopupMenu_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { SubPopupMenu_ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction SubPopupMenu_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\n\nfunction allDisabled(arr) {\n  if (!arr.length) {\n    return true;\n  }\n\n  return arr.every(function (c) {\n    return !!c.props.disabled;\n  });\n}\n\nfunction updateActiveKey(store, menuId, activeKey) {\n  var state = store.getState();\n  store.setState({\n    activeKey: SubPopupMenu_objectSpread({}, state.activeKey, SubPopupMenu_defineProperty({}, menuId, activeKey))\n  });\n}\n\nfunction getEventKey(props) {\n  // when eventKey not available ,it\'s menu and return menu id \'0-menu-\'\n  return props.eventKey || \'0-menu-\';\n}\n\nfunction getActiveKey(props, originalActiveKey) {\n  var activeKey = originalActiveKey;\n  var children = props.children,\n      eventKey = props.eventKey;\n\n  if (activeKey) {\n    var found;\n    loopMenuItem(children, function (c, i) {\n      if (c && c.props && !c.props.disabled && activeKey === getKeyFromChildrenIndex(c, eventKey, i)) {\n        found = true;\n      }\n    });\n\n    if (found) {\n      return activeKey;\n    }\n  }\n\n  activeKey = null;\n\n  if (props.defaultActiveFirst) {\n    loopMenuItem(children, function (c, i) {\n      if (!activeKey && c && !c.props.disabled) {\n        activeKey = getKeyFromChildrenIndex(c, eventKey, i);\n      }\n    });\n    return activeKey;\n  }\n\n  return activeKey;\n}\nfunction saveRef(c) {\n  if (c) {\n    var index = this.instanceArray.indexOf(c);\n\n    if (index !== -1) {\n      // update component if it\'s already inside instanceArray\n      this.instanceArray[index] = c;\n    } else {\n      // add component if it\'s not in instanceArray yet;\n      this.instanceArray.push(c);\n    }\n  }\n}\nvar SubPopupMenu_SubPopupMenu =\n/*#__PURE__*/\nfunction (_React$Component) {\n  SubPopupMenu_inherits(SubPopupMenu, _React$Component);\n\n  function SubPopupMenu(props) {\n    var _this;\n\n    SubPopupMenu_classCallCheck(this, SubPopupMenu);\n\n    _this = SubPopupMenu_possibleConstructorReturn(this, SubPopupMenu_getPrototypeOf(SubPopupMenu).call(this, props));\n    /**\n     * all keyboard events callbacks run from here at first\n     *\n     * note:\n     *  This legacy code that `onKeyDown` is called by parent instead of dom self.\n     *  which need return code to check if this event is handled\n     */\n\n    _this.onKeyDown = function (e, callback) {\n      var keyCode = e.keyCode;\n      var handled;\n\n      _this.getFlatInstanceArray().forEach(function (obj) {\n        if (obj && obj.props.active && obj.onKeyDown) {\n          handled = obj.onKeyDown(e);\n        }\n      });\n\n      if (handled) {\n        return 1;\n      }\n\n      var activeItem = null;\n\n      if (keyCode === KeyCode["a" /* default */].UP || keyCode === KeyCode["a" /* default */].DOWN) {\n        activeItem = _this.step(keyCode === KeyCode["a" /* default */].UP ? -1 : 1);\n      }\n\n      if (activeItem) {\n        e.preventDefault();\n        updateActiveKey(_this.props.store, getEventKey(_this.props), activeItem.props.eventKey);\n\n        if (typeof callback === \'function\') {\n          callback(activeItem);\n        }\n\n        return 1;\n      }\n\n      return undefined;\n    };\n\n    _this.onItemHover = function (e) {\n      var key = e.key,\n          hover = e.hover;\n      updateActiveKey(_this.props.store, getEventKey(_this.props), hover ? key : null);\n    };\n\n    _this.onDeselect = function (selectInfo) {\n      _this.props.onDeselect(selectInfo);\n    };\n\n    _this.onSelect = function (selectInfo) {\n      _this.props.onSelect(selectInfo);\n    };\n\n    _this.onClick = function (e) {\n      _this.props.onClick(e);\n    };\n\n    _this.onOpenChange = function (e) {\n      _this.props.onOpenChange(e);\n    };\n\n    _this.onDestroy = function (key) {\n      /* istanbul ignore next */\n      _this.props.onDestroy(key);\n    };\n\n    _this.getFlatInstanceArray = function () {\n      return _this.instanceArray;\n    };\n\n    _this.step = function (direction) {\n      var children = _this.getFlatInstanceArray();\n\n      var activeKey = _this.props.store.getState().activeKey[getEventKey(_this.props)];\n\n      var len = children.length;\n\n      if (!len) {\n        return null;\n      }\n\n      if (direction < 0) {\n        children = children.concat().reverse();\n      } // find current activeIndex\n\n\n      var activeIndex = -1;\n      children.every(function (c, ci) {\n        if (c && c.props.eventKey === activeKey) {\n          activeIndex = ci;\n          return false;\n        }\n\n        return true;\n      });\n\n      if (!_this.props.defaultActiveFirst && activeIndex !== -1 && allDisabled(children.slice(activeIndex, len - 1))) {\n        return undefined;\n      }\n\n      var start = (activeIndex + 1) % len;\n      var i = start;\n\n      do {\n        var child = children[i];\n\n        if (!child || child.props.disabled) {\n          i = (i + 1) % len;\n        } else {\n          return child;\n        }\n      } while (i !== start);\n\n      return null;\n    };\n\n    _this.renderCommonMenuItem = function (child, i, extraProps) {\n      var state = _this.props.store.getState();\n\n      var _assertThisInitialize = SubPopupMenu_assertThisInitialized(_this),\n          props = _assertThisInitialize.props;\n\n      var key = getKeyFromChildrenIndex(child, props.eventKey, i);\n      var childProps = child.props; // https://github.com/ant-design/ant-design/issues/11517#issuecomment-477403055\n\n      if (!childProps || typeof child.type === \'string\') {\n        return child;\n      }\n\n      var isActive = key === state.activeKey;\n\n      var newChildProps = SubPopupMenu_objectSpread({\n        mode: childProps.mode || props.mode,\n        level: props.level,\n        inlineIndent: props.inlineIndent,\n        renderMenuItem: _this.renderMenuItem,\n        rootPrefixCls: props.prefixCls,\n        index: i,\n        parentMenu: props.parentMenu,\n        // customized ref function, need to be invoked manually in child\'s componentDidMount\n        manualRef: childProps.disabled ? undefined : Object(createChainedFunction["a" /* default */])(child.ref, saveRef.bind(SubPopupMenu_assertThisInitialized(_this))),\n        eventKey: key,\n        active: !childProps.disabled && isActive,\n        multiple: props.multiple,\n        onClick: function onClick(e) {\n          (childProps.onClick || noop)(e);\n\n          _this.onClick(e);\n        },\n        onItemHover: _this.onItemHover,\n        motion: props.motion,\n        subMenuOpenDelay: props.subMenuOpenDelay,\n        subMenuCloseDelay: props.subMenuCloseDelay,\n        forceSubMenuRender: props.forceSubMenuRender,\n        onOpenChange: _this.onOpenChange,\n        onDeselect: _this.onDeselect,\n        onSelect: _this.onSelect,\n        builtinPlacements: props.builtinPlacements,\n        itemIcon: childProps.itemIcon || _this.props.itemIcon,\n        expandIcon: childProps.expandIcon || _this.props.expandIcon\n      }, extraProps); // ref: https://github.com/ant-design/ant-design/issues/13943\n\n\n      if (props.mode === \'inline\' || util_isMobileDevice()) {\n        newChildProps.triggerSubMenuAction = \'click\';\n      }\n\n      return external_commonjs_react_commonjs2_react_amd_react_root_React_["cloneElement"](child, newChildProps);\n    };\n\n    _this.renderMenuItem = function (c, i, subMenuKey) {\n      /* istanbul ignore if */\n      if (!c) {\n        return null;\n      }\n\n      var state = _this.props.store.getState();\n\n      var extraProps = {\n        openKeys: state.openKeys,\n        selectedKeys: state.selectedKeys,\n        triggerSubMenuAction: _this.props.triggerSubMenuAction,\n        subMenuKey: subMenuKey\n      };\n      return _this.renderCommonMenuItem(c, i, extraProps);\n    };\n\n    props.store.setState({\n      activeKey: SubPopupMenu_objectSpread({}, props.store.getState().activeKey, SubPopupMenu_defineProperty({}, props.eventKey, getActiveKey(props, props.activeKey)))\n    });\n    _this.instanceArray = [];\n    return _this;\n  }\n\n  SubPopupMenu_createClass(SubPopupMenu, [{\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      // invoke customized ref to expose component to mixin\n      if (this.props.manualRef) {\n        this.props.manualRef(this);\n      }\n    }\n  }, {\n    key: "shouldComponentUpdate",\n    value: function shouldComponentUpdate(nextProps) {\n      return this.props.visible || nextProps.visible || this.props.className !== nextProps.className || !shallowequal_default()(this.props.style, nextProps.style);\n    }\n  }, {\n    key: "componentDidUpdate",\n    value: function componentDidUpdate(prevProps) {\n      var props = this.props;\n      var originalActiveKey = \'activeKey\' in props ? props.activeKey : props.store.getState().activeKey[getEventKey(props)];\n      var activeKey = getActiveKey(props, originalActiveKey);\n\n      if (activeKey !== originalActiveKey) {\n        updateActiveKey(props.store, getEventKey(props), activeKey);\n      } else if (\'activeKey\' in prevProps) {\n        // If prev activeKey is not same as current activeKey,\n        // we should set it.\n        var prevActiveKey = getActiveKey(prevProps, prevProps.activeKey);\n\n        if (activeKey !== prevActiveKey) {\n          updateActiveKey(props.store, getEventKey(props), activeKey);\n        }\n      }\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this2 = this;\n\n      var props = _extends({}, this.props);\n\n      this.instanceArray = [];\n      var className = classnames_default()(props.prefixCls, props.className, "".concat(props.prefixCls, "-").concat(props.mode));\n      var domProps = {\n        className: className,\n        // role could be \'select\' and by default set to menu\n        role: props.role || \'menu\'\n      };\n\n      if (props.id) {\n        domProps.id = props.id;\n      }\n\n      if (props.focusable) {\n        domProps.tabIndex = 0;\n        domProps.onKeyDown = this.onKeyDown;\n      }\n\n      var prefixCls = props.prefixCls,\n          eventKey = props.eventKey,\n          visible = props.visible,\n          level = props.level,\n          mode = props.mode,\n          overflowedIndicator = props.overflowedIndicator,\n          theme = props.theme;\n      menuAllProps.forEach(function (key) {\n        return delete props[key];\n      }); // Otherwise, the propagated click event will trigger another onClick\n\n      delete props.onClick;\n      return external_commonjs_react_commonjs2_react_amd_react_root_React_["createElement"](es_DOMWrap, Object.assign({}, props, {\n        prefixCls: prefixCls,\n        mode: mode,\n        tag: "ul",\n        level: level,\n        theme: theme,\n        visible: visible,\n        overflowedIndicator: overflowedIndicator\n      }, domProps), external_commonjs_react_commonjs2_react_amd_react_root_React_["Children"].map(props.children, function (c, i) {\n        return _this2.renderMenuItem(c, i, eventKey || \'0-menu-\');\n      }));\n    }\n  }]);\n\n  return SubPopupMenu;\n}(external_commonjs_react_commonjs2_react_amd_react_root_React_["Component"]);\nSubPopupMenu_SubPopupMenu.defaultProps = {\n  prefixCls: \'rc-menu\',\n  className: \'\',\n  mode: \'vertical\',\n  level: 1,\n  inlineIndent: 24,\n  visible: true,\n  focusable: true,\n  style: {},\n  manualRef: noop\n};\nvar SubPopupMenu_connected = Object(lib["connect"])()(SubPopupMenu_SubPopupMenu);\n/* harmony default export */ var es_SubPopupMenu = (SubPopupMenu_connected);\n// EXTERNAL MODULE: ../graphin-components/node_modules/rc-util/es/warning.js\nvar warning = __webpack_require__(83);\n\n// CONCATENATED MODULE: ../graphin-components/node_modules/rc-menu/es/utils/legacyUtil.js\nfunction legacyUtil_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { legacyUtil_typeof = function _typeof(obj) { return typeof obj; }; } else { legacyUtil_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return legacyUtil_typeof(obj); }\n\n\nfunction getMotion(_ref) {\n  var prefixCls = _ref.prefixCls,\n      motion = _ref.motion,\n      openAnimation = _ref.openAnimation,\n      openTransitionName = _ref.openTransitionName;\n\n  if (motion) {\n    return motion;\n  }\n\n  if (legacyUtil_typeof(openAnimation) === \'object\' && openAnimation) {\n    Object(warning["a" /* default */])(false, \'Object type of `openAnimation` is removed. Please use `motion` instead.\');\n  } else if (typeof openAnimation === \'string\') {\n    return {\n      motionName: "".concat(prefixCls, "-open-").concat(openAnimation)\n    };\n  }\n\n  if (openTransitionName) {\n    return {\n      motionName: openTransitionName\n    };\n  }\n\n  return null;\n}\n// CONCATENATED MODULE: ../graphin-components/node_modules/rc-menu/es/Menu.js\nfunction Menu_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Menu_typeof = function _typeof(obj) { return typeof obj; }; } else { Menu_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Menu_typeof(obj); }\n\nfunction Menu_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction Menu_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { Menu_ownKeys(source, true).forEach(function (key) { Menu_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { Menu_ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction Menu_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction Menu_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Menu_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Menu_createClass(Constructor, protoProps, staticProps) { if (protoProps) Menu_defineProperties(Constructor.prototype, protoProps); if (staticProps) Menu_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Menu_possibleConstructorReturn(self, call) { if (call && (Menu_typeof(call) === "object" || typeof call === "function")) { return call; } return Menu_assertThisInitialized(self); }\n\nfunction Menu_getPrototypeOf(o) { Menu_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Menu_getPrototypeOf(o); }\n\nfunction Menu_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Menu_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Menu_setPrototypeOf(subClass, superClass); }\n\nfunction Menu_setPrototypeOf(o, p) { Menu_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Menu_setPrototypeOf(o, p); }\n\n\n\n\n\n\n\nvar Menu_Menu =\n/*#__PURE__*/\nfunction (_React$Component) {\n  Menu_inherits(Menu, _React$Component);\n\n  function Menu(props) {\n    var _this;\n\n    Menu_classCallCheck(this, Menu);\n\n    _this = Menu_possibleConstructorReturn(this, Menu_getPrototypeOf(Menu).call(this, props));\n\n    _this.onSelect = function (selectInfo) {\n      var _assertThisInitialize = Menu_assertThisInitialized(_this),\n          props = _assertThisInitialize.props;\n\n      if (props.selectable) {\n        // root menu\n        var _this$store$getState = _this.store.getState(),\n            _selectedKeys = _this$store$getState.selectedKeys;\n\n        var selectedKey = selectInfo.key;\n\n        if (props.multiple) {\n          _selectedKeys = _selectedKeys.concat([selectedKey]);\n        } else {\n          _selectedKeys = [selectedKey];\n        }\n\n        if (!(\'selectedKeys\' in props)) {\n          _this.store.setState({\n            selectedKeys: _selectedKeys\n          });\n        }\n\n        props.onSelect(Menu_objectSpread({}, selectInfo, {\n          selectedKeys: _selectedKeys\n        }));\n      }\n    };\n\n    _this.onClick = function (e) {\n      _this.props.onClick(e);\n    }; // onKeyDown needs to be exposed as a instance method\n    // e.g., in rc-select, we need to navigate menu item while\n    // current active item is rc-select input box rather than the menu itself\n\n\n    _this.onKeyDown = function (e, callback) {\n      _this.innerMenu.getWrappedInstance().onKeyDown(e, callback);\n    };\n\n    _this.onOpenChange = function (event) {\n      var _assertThisInitialize2 = Menu_assertThisInitialized(_this),\n          props = _assertThisInitialize2.props;\n\n      var openKeys = _this.store.getState().openKeys.concat();\n\n      var changed = false;\n\n      var processSingle = function processSingle(e) {\n        var oneChanged = false;\n\n        if (e.open) {\n          oneChanged = openKeys.indexOf(e.key) === -1;\n\n          if (oneChanged) {\n            openKeys.push(e.key);\n          }\n        } else {\n          var index = openKeys.indexOf(e.key);\n          oneChanged = index !== -1;\n\n          if (oneChanged) {\n            openKeys.splice(index, 1);\n          }\n        }\n\n        changed = changed || oneChanged;\n      };\n\n      if (Array.isArray(event)) {\n        // batch change call\n        event.forEach(processSingle);\n      } else {\n        processSingle(event);\n      }\n\n      if (changed) {\n        if (!(\'openKeys\' in _this.props)) {\n          _this.store.setState({\n            openKeys: openKeys\n          });\n        }\n\n        props.onOpenChange(openKeys);\n      }\n    };\n\n    _this.onDeselect = function (selectInfo) {\n      var _assertThisInitialize3 = Menu_assertThisInitialized(_this),\n          props = _assertThisInitialize3.props;\n\n      if (props.selectable) {\n        var _selectedKeys2 = _this.store.getState().selectedKeys.concat();\n\n        var selectedKey = selectInfo.key;\n\n        var index = _selectedKeys2.indexOf(selectedKey);\n\n        if (index !== -1) {\n          _selectedKeys2.splice(index, 1);\n        }\n\n        if (!(\'selectedKeys\' in props)) {\n          _this.store.setState({\n            selectedKeys: _selectedKeys2\n          });\n        }\n\n        props.onDeselect(Menu_objectSpread({}, selectInfo, {\n          selectedKeys: _selectedKeys2\n        }));\n      }\n    };\n\n    _this.getOpenTransitionName = function () {\n      var _assertThisInitialize4 = Menu_assertThisInitialized(_this),\n          props = _assertThisInitialize4.props;\n\n      var transitionName = props.openTransitionName;\n      var animationName = props.openAnimation;\n\n      if (!transitionName && typeof animationName === \'string\') {\n        transitionName = "".concat(props.prefixCls, "-open-").concat(animationName);\n      }\n\n      return transitionName;\n    };\n\n    _this.setInnerMenu = function (node) {\n      _this.innerMenu = node;\n    };\n\n    _this.isRootMenu = true;\n    var selectedKeys = props.defaultSelectedKeys;\n    var openKeys = props.defaultOpenKeys;\n\n    if (\'selectedKeys\' in props) {\n      selectedKeys = props.selectedKeys || [];\n    }\n\n    if (\'openKeys\' in props) {\n      openKeys = props.openKeys || [];\n    }\n\n    _this.store = Object(lib["create"])({\n      selectedKeys: selectedKeys,\n      openKeys: openKeys,\n      activeKey: {\n        \'0-menu-\': getActiveKey(props, props.activeKey)\n      }\n    });\n    return _this;\n  }\n\n  Menu_createClass(Menu, [{\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      this.updateMiniStore();\n    }\n  }, {\n    key: "componentDidUpdate",\n    value: function componentDidUpdate() {\n      this.updateMiniStore();\n    }\n  }, {\n    key: "updateMiniStore",\n    value: function updateMiniStore() {\n      if (\'selectedKeys\' in this.props) {\n        this.store.setState({\n          selectedKeys: this.props.selectedKeys || []\n        });\n      }\n\n      if (\'openKeys\' in this.props) {\n        this.store.setState({\n          openKeys: this.props.openKeys || []\n        });\n      }\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var props = Menu_objectSpread({}, this.props);\n\n      props.className += " ".concat(props.prefixCls, "-root");\n      props = Menu_objectSpread({}, props, {\n        onClick: this.onClick,\n        onOpenChange: this.onOpenChange,\n        onDeselect: this.onDeselect,\n        onSelect: this.onSelect,\n        parentMenu: this,\n        motion: getMotion(this.props)\n      });\n      delete props.openAnimation;\n      delete props.openTransitionName;\n      return external_commonjs_react_commonjs2_react_amd_react_root_React_["createElement"](lib["Provider"], {\n        store: this.store\n      }, external_commonjs_react_commonjs2_react_amd_react_root_React_["createElement"](es_SubPopupMenu, Object.assign({}, props, {\n        ref: this.setInnerMenu\n      }), this.props.children));\n    }\n  }]);\n\n  return Menu;\n}(external_commonjs_react_commonjs2_react_amd_react_root_React_["Component"]);\n\nMenu_Menu.defaultProps = {\n  selectable: true,\n  onClick: noop,\n  onSelect: noop,\n  onOpenChange: noop,\n  onDeselect: noop,\n  defaultSelectedKeys: [],\n  defaultOpenKeys: [],\n  subMenuOpenDelay: 0.1,\n  subMenuCloseDelay: 0.1,\n  triggerSubMenuAction: \'hover\',\n  prefixCls: \'rc-menu\',\n  className: \'\',\n  mode: \'vertical\',\n  style: {},\n  builtinPlacements: {},\n  overflowedIndicator: external_commonjs_react_commonjs2_react_amd_react_root_React_["createElement"]("span", null, "\\xB7\\xB7\\xB7")\n};\n/* harmony default export */ var es_Menu = (Menu_Menu);\n// EXTERNAL MODULE: ../graphin-components/node_modules/dom-scroll-into-view/lib/index.js\nvar dom_scroll_into_view_lib = __webpack_require__(315);\nvar dom_scroll_into_view_lib_default = /*#__PURE__*/__webpack_require__.n(dom_scroll_into_view_lib);\n\n// CONCATENATED MODULE: ../graphin-components/node_modules/rc-menu/es/MenuItem.js\nfunction MenuItem_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { MenuItem_typeof = function _typeof(obj) { return typeof obj; }; } else { MenuItem_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return MenuItem_typeof(obj); }\n\nfunction MenuItem_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction MenuItem_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { MenuItem_ownKeys(source, true).forEach(function (key) { MenuItem_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { MenuItem_ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction MenuItem_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction MenuItem_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction MenuItem_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction MenuItem_createClass(Constructor, protoProps, staticProps) { if (protoProps) MenuItem_defineProperties(Constructor.prototype, protoProps); if (staticProps) MenuItem_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction MenuItem_possibleConstructorReturn(self, call) { if (call && (MenuItem_typeof(call) === "object" || typeof call === "function")) { return call; } return MenuItem_assertThisInitialized(self); }\n\nfunction MenuItem_getPrototypeOf(o) { MenuItem_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return MenuItem_getPrototypeOf(o); }\n\nfunction MenuItem_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction MenuItem_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) MenuItem_setPrototypeOf(subClass, superClass); }\n\nfunction MenuItem_setPrototypeOf(o, p) { MenuItem_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return MenuItem_setPrototypeOf(o, p); }\n\n\n\n\n\n\n\n\nvar MenuItem_MenuItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  MenuItem_inherits(MenuItem, _React$Component);\n\n  function MenuItem() {\n    var _this;\n\n    MenuItem_classCallCheck(this, MenuItem);\n\n    _this = MenuItem_possibleConstructorReturn(this, MenuItem_getPrototypeOf(MenuItem).apply(this, arguments));\n\n    _this.onKeyDown = function (e) {\n      var keyCode = e.keyCode;\n\n      if (keyCode === KeyCode["a" /* default */].ENTER) {\n        _this.onClick(e);\n\n        return true;\n      }\n\n      return undefined;\n    };\n\n    _this.onMouseLeave = function (e) {\n      var _this$props = _this.props,\n          eventKey = _this$props.eventKey,\n          onItemHover = _this$props.onItemHover,\n          onMouseLeave = _this$props.onMouseLeave;\n      onItemHover({\n        key: eventKey,\n        hover: false\n      });\n      onMouseLeave({\n        key: eventKey,\n        domEvent: e\n      });\n    };\n\n    _this.onMouseEnter = function (e) {\n      var _this$props2 = _this.props,\n          eventKey = _this$props2.eventKey,\n          onItemHover = _this$props2.onItemHover,\n          onMouseEnter = _this$props2.onMouseEnter;\n      onItemHover({\n        key: eventKey,\n        hover: true\n      });\n      onMouseEnter({\n        key: eventKey,\n        domEvent: e\n      });\n    };\n\n    _this.onClick = function (e) {\n      var _this$props3 = _this.props,\n          eventKey = _this$props3.eventKey,\n          multiple = _this$props3.multiple,\n          onClick = _this$props3.onClick,\n          onSelect = _this$props3.onSelect,\n          onDeselect = _this$props3.onDeselect,\n          isSelected = _this$props3.isSelected;\n      var info = {\n        key: eventKey,\n        keyPath: [eventKey],\n        item: MenuItem_assertThisInitialized(_this),\n        domEvent: e\n      };\n      onClick(info);\n\n      if (multiple) {\n        if (isSelected) {\n          onDeselect(info);\n        } else {\n          onSelect(info);\n        }\n      } else if (!isSelected) {\n        onSelect(info);\n      }\n    };\n\n    _this.saveNode = function (node) {\n      _this.node = node;\n    };\n\n    return _this;\n  }\n\n  MenuItem_createClass(MenuItem, [{\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      // invoke customized ref to expose component to mixin\n      this.callRef();\n    }\n  }, {\n    key: "componentDidUpdate",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props4 = this.props,\n          active = _this$props4.active,\n          parentMenu = _this$props4.parentMenu,\n          eventKey = _this$props4.eventKey; // 在 parentMenu 上层保存滚动状态，避免重复的 MenuItem key 导致滚动跳动\n      // https://github.com/ant-design/ant-design/issues/16181\n\n      if (!prevProps.active && active && (!parentMenu || !parentMenu["scrolled-".concat(eventKey)])) {\n        if (this.node) {\n          dom_scroll_into_view_lib_default()(this.node, external_commonjs_react_dom_commonjs2_react_dom_amd_react_dom_root_ReactDOM_["findDOMNode"](parentMenu), {\n            onlyScrollIfNeeded: true\n          });\n          parentMenu["scrolled-".concat(eventKey)] = true;\n        }\n      } else if (parentMenu && parentMenu["scrolled-".concat(eventKey)]) {\n        delete parentMenu["scrolled-".concat(eventKey)];\n      }\n\n      this.callRef();\n    }\n  }, {\n    key: "componentWillUnmount",\n    value: function componentWillUnmount() {\n      var props = this.props;\n\n      if (props.onDestroy) {\n        props.onDestroy(props.eventKey);\n      }\n    }\n  }, {\n    key: "getPrefixCls",\n    value: function getPrefixCls() {\n      return "".concat(this.props.rootPrefixCls, "-item");\n    }\n  }, {\n    key: "getActiveClassName",\n    value: function getActiveClassName() {\n      return "".concat(this.getPrefixCls(), "-active");\n    }\n  }, {\n    key: "getSelectedClassName",\n    value: function getSelectedClassName() {\n      return "".concat(this.getPrefixCls(), "-selected");\n    }\n  }, {\n    key: "getDisabledClassName",\n    value: function getDisabledClassName() {\n      return "".concat(this.getPrefixCls(), "-disabled");\n    }\n  }, {\n    key: "callRef",\n    value: function callRef() {\n      if (this.props.manualRef) {\n        this.props.manualRef(this);\n      }\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _classNames;\n\n      var props = MenuItem_objectSpread({}, this.props);\n\n      var className = classnames_default()(this.getPrefixCls(), props.className, (_classNames = {}, MenuItem_defineProperty(_classNames, this.getActiveClassName(), !props.disabled && props.active), MenuItem_defineProperty(_classNames, this.getSelectedClassName(), props.isSelected), MenuItem_defineProperty(_classNames, this.getDisabledClassName(), props.disabled), _classNames));\n\n      var attrs = MenuItem_objectSpread({}, props.attribute, {\n        title: props.title,\n        className: className,\n        // set to menuitem by default\n        role: props.role || \'menuitem\',\n        \'aria-disabled\': props.disabled\n      });\n\n      if (props.role === \'option\') {\n        // overwrite to option\n        attrs = MenuItem_objectSpread({}, attrs, {\n          role: \'option\',\n          \'aria-selected\': props.isSelected\n        });\n      } else if (props.role === null || props.role === \'none\') {\n        // sometimes we want to specify role inside <li/> element\n        // <li><a role=\'menuitem\'>Link</a></li> would be a good example\n        // in this case the role on <li/> should be "none" to\n        // remove the implied listitem role.\n        // https://www.w3.org/TR/wai-aria-practices-1.1/examples/menubar/menubar-1/menubar-1.html\n        attrs.role = \'none\';\n      } // In case that onClick/onMouseLeave/onMouseEnter is passed down from owner\n\n\n      var mouseEvent = {\n        onClick: props.disabled ? null : this.onClick,\n        onMouseLeave: props.disabled ? null : this.onMouseLeave,\n        onMouseEnter: props.disabled ? null : this.onMouseEnter\n      };\n\n      var style = MenuItem_objectSpread({}, props.style);\n\n      if (props.mode === \'inline\') {\n        style.paddingLeft = props.inlineIndent * props.level;\n      }\n\n      menuAllProps.forEach(function (key) {\n        return delete props[key];\n      });\n      var icon = this.props.itemIcon;\n\n      if (typeof this.props.itemIcon === \'function\') {\n        // TODO: This is a bug which should fixed after TS refactor\n        icon = external_commonjs_react_commonjs2_react_amd_react_root_React_["createElement"](this.props.itemIcon, this.props);\n      }\n\n      return external_commonjs_react_commonjs2_react_amd_react_root_React_["createElement"]("li", Object.assign({}, props, attrs, mouseEvent, {\n        style: style,\n        ref: this.saveNode\n      }), props.children, icon);\n    }\n  }]);\n\n  return MenuItem;\n}(external_commonjs_react_commonjs2_react_amd_react_root_React_["Component"]);\nMenuItem_MenuItem.isMenuItem = true;\nMenuItem_MenuItem.defaultProps = {\n  onSelect: noop,\n  onMouseEnter: noop,\n  onMouseLeave: noop,\n  manualRef: noop\n};\nvar MenuItem_connected = Object(lib["connect"])(function (_ref, _ref2) {\n  var activeKey = _ref.activeKey,\n      selectedKeys = _ref.selectedKeys;\n  var eventKey = _ref2.eventKey,\n      subMenuKey = _ref2.subMenuKey;\n  return {\n    active: activeKey[subMenuKey] === eventKey,\n    isSelected: selectedKeys.indexOf(eventKey) !== -1\n  };\n})(MenuItem_MenuItem);\n/* harmony default export */ var es_MenuItem = (MenuItem_connected);\n// CONCATENATED MODULE: ../graphin-components/node_modules/rc-menu/es/MenuItemGroup.js\nfunction MenuItemGroup_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { MenuItemGroup_typeof = function _typeof(obj) { return typeof obj; }; } else { MenuItemGroup_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return MenuItemGroup_typeof(obj); }\n\nfunction MenuItemGroup_extends() { MenuItemGroup_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return MenuItemGroup_extends.apply(this, arguments); }\n\nfunction MenuItemGroup_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction MenuItemGroup_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction MenuItemGroup_createClass(Constructor, protoProps, staticProps) { if (protoProps) MenuItemGroup_defineProperties(Constructor.prototype, protoProps); if (staticProps) MenuItemGroup_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction MenuItemGroup_possibleConstructorReturn(self, call) { if (call && (MenuItemGroup_typeof(call) === "object" || typeof call === "function")) { return call; } return MenuItemGroup_assertThisInitialized(self); }\n\nfunction MenuItemGroup_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction MenuItemGroup_getPrototypeOf(o) { MenuItemGroup_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return MenuItemGroup_getPrototypeOf(o); }\n\nfunction MenuItemGroup_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) MenuItemGroup_setPrototypeOf(subClass, superClass); }\n\nfunction MenuItemGroup_setPrototypeOf(o, p) { MenuItemGroup_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return MenuItemGroup_setPrototypeOf(o, p); }\n\n\n\n\nvar MenuItemGroup_MenuItemGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  MenuItemGroup_inherits(MenuItemGroup, _React$Component);\n\n  function MenuItemGroup() {\n    var _this;\n\n    MenuItemGroup_classCallCheck(this, MenuItemGroup);\n\n    _this = MenuItemGroup_possibleConstructorReturn(this, MenuItemGroup_getPrototypeOf(MenuItemGroup).apply(this, arguments));\n\n    _this.renderInnerMenuItem = function (item) {\n      var _this$props = _this.props,\n          renderMenuItem = _this$props.renderMenuItem,\n          index = _this$props.index;\n      return renderMenuItem(item, index, _this.props.subMenuKey);\n    };\n\n    return _this;\n  }\n\n  MenuItemGroup_createClass(MenuItemGroup, [{\n    key: "render",\n    value: function render() {\n      var props = MenuItemGroup_extends({}, this.props);\n\n      var _props$className = props.className,\n          className = _props$className === void 0 ? \'\' : _props$className,\n          rootPrefixCls = props.rootPrefixCls;\n      var titleClassName = "".concat(rootPrefixCls, "-item-group-title");\n      var listClassName = "".concat(rootPrefixCls, "-item-group-list");\n      var title = props.title,\n          children = props.children;\n      menuAllProps.forEach(function (key) {\n        return delete props[key];\n      }); // Set onClick to null, to ignore propagated onClick event\n\n      delete props.onClick;\n      return external_commonjs_react_commonjs2_react_amd_react_root_React_["createElement"]("li", Object.assign({}, props, {\n        className: "".concat(className, " ").concat(rootPrefixCls, "-item-group")\n      }), external_commonjs_react_commonjs2_react_amd_react_root_React_["createElement"]("div", {\n        className: titleClassName,\n        title: typeof title === \'string\' ? title : undefined\n      }, title), external_commonjs_react_commonjs2_react_amd_react_root_React_["createElement"]("ul", {\n        className: listClassName\n      }, external_commonjs_react_commonjs2_react_amd_react_root_React_["Children"].map(children, this.renderInnerMenuItem)));\n    }\n  }]);\n\n  return MenuItemGroup;\n}(external_commonjs_react_commonjs2_react_amd_react_root_React_["Component"]);\n\nMenuItemGroup_MenuItemGroup.isMenuItemGroup = true;\nMenuItemGroup_MenuItemGroup.defaultProps = {\n  disabled: true\n};\n/* harmony default export */ var es_MenuItemGroup = (MenuItemGroup_MenuItemGroup);\n// CONCATENATED MODULE: ../graphin-components/node_modules/rc-menu/es/Divider.js\n\n\nvar Divider_Divider = function Divider(_ref) {\n  var className = _ref.className,\n      rootPrefixCls = _ref.rootPrefixCls,\n      style = _ref.style;\n  return external_commonjs_react_commonjs2_react_amd_react_root_React_["createElement"]("li", {\n    className: "".concat(className, " ").concat(rootPrefixCls, "-item-divider"),\n    style: style\n  });\n};\n\nDivider_Divider.defaultProps = {\n  // To fix keyboard UX.\n  disabled: true,\n  className: \'\',\n  style: {}\n};\n/* harmony default export */ var es_Divider = (Divider_Divider);\n// CONCATENATED MODULE: ../graphin-components/node_modules/rc-menu/es/index.js\n/* concated harmony reexport SubMenu */__webpack_require__.d(__webpack_exports__, "d", function() { return es_SubMenu; });\n/* concated harmony reexport Item */__webpack_require__.d(__webpack_exports__, "b", function() { return es_MenuItem; });\n/* unused concated harmony import MenuItem */\n/* unused concated harmony import MenuItemGroup */\n/* concated harmony reexport ItemGroup */__webpack_require__.d(__webpack_exports__, "c", function() { return es_MenuItemGroup; });\n/* concated harmony reexport Divider */__webpack_require__.d(__webpack_exports__, "a", function() { return es_Divider; });\n\n\n\n\n\n\n/* harmony default export */ var rc_menu_es = __webpack_exports__["e"] = (es_Menu);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///45\n')}}]);